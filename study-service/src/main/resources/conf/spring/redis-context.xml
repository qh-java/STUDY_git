<beans     xmlns="http://www.springframework.org/schema/beans"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:p="http://www.springframework.org/schema/p"
           xmlns:tx="http://www.springframework.org/schema/tx"
           xmlns:context="http://www.springframework.org/schema/context"
           xmlns:cache="http://www.springframework.org/schema/cache"
           xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
               ">
    <bean id="annotationPropertyConfigurerRedis"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="1" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
            <list>
                <value>classpath:conf/redis.properties</value>
            </list>
        </property>
    </bean>
    <!-- redis数据源 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大空闲数 -->
        <property name="maxIdle" value="${redis.maxIdle}" />
        <!-- 最大空连接数 -->
        <property name="maxActive" value="${redis.maxActive}" />
        <!-- 最大等待时间 -->
        <property name="maxWait" value="${redis.maxWait}" />
        <!-- 返回连接时，检测连接是否成功 -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>

    <!-- Spring-redis连接池管理工厂 -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <!-- IP地址 -->
        <property name="hostName" value="${redis.host}" />
        <!-- 端口号 -->
        <property name="port" value="${redis.port}" />
        <!--<property name="password" value="${redis.password}" />-->
        <!-- 超时时间 默认2000-->
        <!--<property name="timeout" value="${redis.timeout}" />-->
        <!-- 连接池配置引用 -->
        <property name="poolConfig" ref="poolConfig" />
        <!-- usePool：是否使用连接池 -->
        <property name="usePool" value="true"/>
    </bean>

    <!-- redis template definition -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
        <!--开启事务  -->
        <!--<property name="enableTransactionSupport" value="true"></property>-->
    </bean>
<!--该bean用于手动存取kye，value-->
    <bean id="cacheUtil" class="com.qh.study.cache.CacheUtil">
        <property name="redisTemplate" ref="redisTemplate" />
    </bean>
    <!--下方为自动注解配置缓存-->
    <cache:annotation-driven cache-manager="redisCacheManager" />
    <!-- 定义缓存管理器，如果你使用id="cacheManager"，则驱动不需要显式配置cache-manager属性 -->
    <bean id="redisCacheManager" class="org.springframework.cache.support.SimpleCacheManager">
    <property name="caches">
        <set>
        <bean class="org.springframework.data.redis.cache.RedisCache">
            <!--通过构造方法注入RedisTemplate -->
            <constructor-arg index="0" name="name" value="txCache" />
            <constructor-arg index="1"  >
            <null/>
            </constructor-arg>
            <constructor-arg index="2" name="template" ref="redisTemplate" />
            <constructor-arg index="3" name="expiration" value="20" />
        </bean>
        </set>
     </property>
     </bean>

    <!--&lt;!&ndash; 定义缓存管理器，如果你使用id="cacheManager"，则驱动不需要显式配置cache-manager属性 适用pringboot&ndash;&gt;-->
    <!--<bean id="redisCacheManager"-->
          <!--class="org.springframework.data.redis.cache.RedisCacheManager">-->
        <!--&lt;!&ndash;通过构造方法注入RedisTemplate &ndash;&gt;-->
        <!--<constructor-arg index="0" ref="redisTemplate" />-->
        <!--&lt;!&ndash; 定义默认超时时间，单位秒 &ndash;&gt;-->
        <!--<property name="defaultExpiration" value="600" />-->
        <!--&lt;!&ndash;缓存管理器名称 &ndash;&gt;-->
        <!--<property name="cacheNames">-->
            <!--<list>-->
                <!--<value>redisCacheManager</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->


</beans>